doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  title Clase-12
  link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css')
body 
  section.section
    form#form.container
      .field
        label.label Nombre del producto
        .control
          input.input(type='text' placeholder='Text input' name='producto')
      .field
        label.label Precio
        .control.has-icons-left.has-icons-right
          input.input.is-success(type='text' placeholder='Text input' name='precio')
          span.icon.is-small.is-left
            i.fas.fa-user
          span.icon.is-small.is-right
            i.fas.fa-check
      .field
        label.label Thumbnail
        .control.has-icons-left.has-icons-right
          input.input.is-success(type='text' placeholder='Text input' name='thumbnail')
          span.icon.is-small.is-left
            i.fas.fa-user
          span.icon.is-small.is-right
            i.fas.fa-check
      .field.is-grouped
        .control
          button.button.is-link Submit
        .control
          button.button.is-link.is-light Cancel
      .error
    script(src="/socket.io/socket.io.js")
    script.  
        const socket = io();
        let inputValues = {
          producto: '',
          precio: '',
          thumbnail: ''
        }
        const inputs = document.querySelectorAll('.input');

        inputs.forEach(input => {
          input.addEventListener('input', e => {
            inputValues = {...inputValues, [e.target.name]: e.target.value};
          })
        })

        document.querySelector('#form').addEventListener('submit', e => {

          const { producto, precio, thumbnail } = inputValues;
          
          if([producto.trim(), precio.trim(), thumbnail.trim()].includes('')) {
            console.log('Hubo un error!');
            document.querySelector('.error').innerHTML = '<p style="color: red;">Hubo un error</p>'
            return;
          }
          document.querySelector('.error').innerHTML = '';
          socket.emit('product', inputValues);
          inputs.forEach(input => input.value = '');
        })